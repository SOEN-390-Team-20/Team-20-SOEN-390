# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  heroku: circleci/heroku@1.2.6

workflows:
  build_backend_e2e_then_deploy:
      jobs:
        - build-app
        - e2e-tests:
            requires:
              - build-app
        - heroku/deploy-via-git:
            requires:
                - build-app
                - e2e-tests
            filters:
                branches:
                    only: main 
  test_frontend:
      jobs:
        - frontend-tests

jobs:
  frontend-tests:
    docker:
      - image: 'cimg/node:17.4.0'
    steps:
      - checkout
      - run:
          name: "Install Node for frontend"
          command: npm install
          working_directory: ./client
      - run:
          name: "Run linter on frontend"
          command: npm run lint .
          working_directory: ./client/
      - run:
          name: "Run tests on frontend"
          command: npm run test
          working_directory: ./client/
  build-app:
    docker:
      - image: 'cimg/node:17.4.0'
    steps:
      - checkout
      - run:
          name: "Setup custom environment variables"
          command: |
            echo 'mongo_user=$mongo_user' >> ./.env
            echo 'mongo_pass=$mongo_pass' >> ./.env
      - run:
          name: "Install Node for backend"
          command: npm install
          working_directory: ./
      - run:
          name: "Run linter on backend"
          command: npm run lint .
          working_directory: ./
      - run:
          name: "Build the frontend"
          command: npm run build
          working_directory: ./
      - run:
          name: "Run tests on backend"
          command: npm run test:only
          working_directory: ./
      - persist_to_workspace:
          root: . 
          paths:
            - ./
            - /root/.cache/Cypress
  e2e-tests:
      docker:
        - image: cypress/base:14.16.0
          environment:
            TERM: xterm
      steps:
        - attach_workspace:
            at: ./
        - run:
            name: Run server and cypress/install
            command: npm run cy:run
            working_directory: ./